{"version":3,"file":"static/js/68.5a510fea.chunk.js","mappings":"kTAEMA,EAAU,mCAIT,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,yHAA2C,GAA3C,SACkBC,EAAAA,EAAAA,IAAUD,GAD5B,cACCE,EADD,yBAEEA,EAASC,MAFX,mEAKA,SAASC,IACd,OAAOL,EAAU,+BAAD,OAAgCD,GACjD,CAEM,SAASO,EAAgBC,GAC9B,OAAOP,EAAU,yBAAD,OAA0BD,EAA1B,kBAA2CQ,GAC5D,CAEM,SAASC,EAAeC,GAC7B,OAAOT,EAAU,UAAD,OAAWS,EAAX,oBAA8BV,EAA9B,mBACjB,CAEM,SAASW,EAAgBD,GAC9B,OAAOT,EAAU,UAAD,OACJS,EADI,4BACuBV,EADvB,mBAGjB,CAEM,SAASY,EAAgBF,GAC9B,OAAOT,EAAU,UAAD,OACJS,EADI,4BACuBV,EADvB,mBAGjB,CA7BDG,EAAAA,EAAAA,SAAAA,QAAyB,+B,0KCFZU,EAAWC,EAAAA,GAAAA,EAAH,4GAORC,EAAOD,EAAAA,GAAAA,EAAH,sBAEJE,EAAUF,EAAAA,GAAAA,GAAH,0HAQPG,EAAOH,EAAAA,GAAAA,GAAH,mJAMJI,EAAeJ,EAAAA,GAAAA,EAAH,mE,SCsBzB,EApCqB,WACnB,OAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAcR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,8GAEOb,EAAAA,EAAAA,IAAgBU,GAFvB,OAENjB,EAFM,OAGZgB,EAAWhB,EAAKqB,SAHJ,gDAKZC,QAAQC,IAAR,MALY,yDAAH,qDAQbH,GACD,GAAE,CAACH,KAGF,8BACsB,IAAnBF,EAAQS,QACP,SAACb,EAAD,UACGI,EAAQU,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACtB,OACE,UAACf,EAAD,YACE,SAACJ,EAAD,UAAWkB,KACX,SAAChB,EAAD,UAAOiB,MAFED,EAKd,OAGH,SAACb,EAAD,yDAIP,C","sources":["components/services/getMovies.js","pages/MovieReviews/MovieReviews.styled.jsx","pages/MovieReviews/MovieReviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '2a9c1d08031f8c725807d91372c6f53b';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function getMovies(endpoint, query = '') {\n  const response = await axios.get(endpoint);\n  return response.data;\n}\n\nexport function getTrendingMovies() {\n  return getMovies(`/trending/movie/day?api_key=${API_KEY}`);\n}\n\nexport function getSearchMovies(query) {\n  return getMovies(`/search/movie?api_key=${API_KEY}&query=${query}`);\n}\n\nexport function getSingleMovie(movieId) {\n  return getMovies(`/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n}\n\nexport function getMovieCredits(movieId) {\n  return getMovies(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function getMovieReviews(movieId) {\n  return getMovies(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n}\n","import styled from 'styled-components';\n\nexport const Username = styled.p`\n  margin-bottom: 10px;\n  font-size: 20px;\n  font-weight: 500;\n  color: #ff7b00;\n`;\n\nexport const Text = styled.p``;\n\nexport const Reviews = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  gap: 30px;\n  margin: 30px 0;\n`;\n\nexport const Item = styled.li`\n  padding: 20px;\n  border-radius: 5px;\n  box-shadow: rgba(247, 161, 3, 0.12) 0px 1px 3px, rgb(228, 138, 2) 0px 1px 2px;\n`;\n\nexport const EmptyReviews = styled.p`\n  font-size: 30px;\n  text-align: center;\n`;\n","import { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'components/services/getMovies';\nimport { useEffect, useState } from 'react';\nimport {\n  Username,\n  Text,\n  Item,\n  Reviews,\n  EmptyReviews,\n} from './MovieReviews.styled';\n\nconst MovieReviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const getCast = async () => {\n      try {\n        const data = await getMovieReviews(id);\n        setReviews(data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getCast();\n  }, [id]);\n\n  return (\n    <>\n      {reviews.length !== 0 ? (\n        <Reviews>\n          {reviews.map(({ author, content }) => {\n            return (\n              <Item key={author}>\n                <Username>{author}</Username>\n                <Text>{content}</Text>\n              </Item>\n            );\n          })}\n        </Reviews>\n      ) : (\n        <EmptyReviews>We don't have any reviews for this movie.</EmptyReviews>\n      )}\n    </>\n  );\n};\n\nexport default MovieReviews;\n"],"names":["API_KEY","getMovies","endpoint","axios","response","data","getTrendingMovies","getSearchMovies","query","getSingleMovie","movieId","getMovieCredits","getMovieReviews","Username","styled","Text","Reviews","Item","EmptyReviews","useState","reviews","setReviews","id","useParams","useEffect","getCast","results","console","log","length","map","author","content"],"sourceRoot":""}