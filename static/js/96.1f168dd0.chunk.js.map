{"version":3,"file":"static/js/96.1f168dd0.chunk.js","mappings":"kTAEMA,EAAU,mCAIT,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,yHAA2C,GAA3C,SACkBC,EAAAA,EAAAA,IAAUD,GAD5B,cACCE,EADD,yBAEEA,EAASC,MAFX,mEAKA,SAASC,IACd,OAAOL,EAAU,+BAAD,OAAgCD,GACjD,CAEM,SAASO,EAAgBC,GAC9B,OAAOP,EAAU,yBAAD,OAA0BD,EAA1B,kBAA2CQ,GAC5D,CAEM,SAASC,EAAeC,GAC7B,OAAOT,EAAU,UAAD,OAAWS,EAAX,oBAA8BV,EAA9B,mBACjB,CAEM,SAASW,EAAgBD,GAC9B,OAAOT,EAAU,UAAD,OACJS,EADI,4BACuBV,EADvB,mBAGjB,CAEM,SAASY,EAAgBF,GAC9B,OAAOT,EAAU,UAAD,OACJS,EADI,4BACuBV,EADvB,mBAGjB,CA7BDG,EAAAA,EAAAA,SAAAA,QAAyB,+B,sLCFZU,EAAaC,EAAAA,GAAAA,IAAH,yCAIVC,EAAOD,EAAAA,GAAAA,GAAH,+FAMJE,EAAOF,EAAAA,GAAAA,GAAH,iQASJG,EAAOH,EAAAA,GAAAA,EAAH,gIAOJI,EAAYJ,EAAAA,GAAAA,EAAH,yFAMTK,EAAYL,EAAAA,GAAAA,EAAH,mE,SCuBtB,EA5CkB,WAChB,OAAwBM,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAcR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,8GAEOf,EAAAA,EAAAA,IAAgBY,GAFvB,OAENlB,EAFM,OAGZiB,EAAQjB,EAAKgB,MAHD,gDAKZM,QAAQC,IAAR,MALY,yDAAH,qDAQbF,GACD,GAAE,CAACH,KAGF,8BACmB,IAAhBF,EAAKQ,QACJ,SAACd,EAAD,UACGM,EAAKS,KAAI,YAAwC,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAC5B,OACE,UAACjB,EAAD,YACE,SAACH,EAAD,CACEqB,IACmB,OAAjBD,EAAA,8CAC2CA,GACvCE,EAENC,IAAKL,KAEP,SAACd,EAAD,UAAOc,KACP,UAACb,EAAD,yBAAuBc,OAVdD,EAad,OAGH,SAACZ,EAAD,sDAIP,C","sources":["components/services/getMovies.js","pages/MovieCast/MovieCast.styled.jsx","pages/MovieCast/MovieCast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '2a9c1d08031f8c725807d91372c6f53b';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function getMovies(endpoint, query = '') {\n  const response = await axios.get(endpoint);\n  return response.data;\n}\n\nexport function getTrendingMovies() {\n  return getMovies(`/trending/movie/day?api_key=${API_KEY}`);\n}\n\nexport function getSearchMovies(query) {\n  return getMovies(`/search/movie?api_key=${API_KEY}&query=${query}`);\n}\n\nexport function getSingleMovie(movieId) {\n  return getMovies(`/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n}\n\nexport function getMovieCredits(movieId) {\n  return getMovies(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function getMovieReviews(movieId) {\n  return getMovies(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n}\n","import styled from 'styled-components';\n\nexport const ProfileImg = styled.img`\n  width: 130px;\n`;\n\nexport const Cast = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  margin: 30px 0;\n`;\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: calc((100% - 100px) / 5);\n  padding: 10px;\n  box-shadow: rgba(247, 161, 3, 0.12) 0px 1px 3px, rgb(228, 138, 2) 0px 1px 2px;\n`;\nexport const Name = styled.p`\n  margin-top: 10px;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 400;\n  color: #ff7b00;\n`;\nexport const Character = styled.p`\n  margin-top: 10px;\n  text-align: center;\n  font-weight: 500;\n`;\n\nexport const CastEmpty = styled.p`\n  font-size: 30px;\n  text-align: center;\n`;\n","import { useParams } from 'react-router-dom';\nimport { getMovieCredits } from 'components/services/getMovies';\nimport { useEffect, useState } from 'react';\nimport profile from 'images/no_chel_pic.png';\nimport {\n  ProfileImg,\n  Cast,\n  Item,\n  Name,\n  Character,\n  CastEmpty,\n} from './MovieCast.styled';\n\nconst MovieCast = () => {\n  const [cast, setCast] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const getCast = async () => {\n      try {\n        const data = await getMovieCredits(id);\n        setCast(data.cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getCast();\n  }, [id]);\n\n  return (\n    <>\n      {cast.length !== 0 ? (\n        <Cast>\n          {cast.map(({ name, character, profile_path }) => {\n            return (\n              <Item key={name}>\n                <ProfileImg\n                  src={\n                    profile_path !== null\n                      ? `https://image.tmdb.org/t/p/original/${profile_path}`\n                      : profile\n                  }\n                  alt={name}\n                />\n                <Name>{name}</Name>\n                <Character>Character: {character}</Character>\n              </Item>\n            );\n          })}\n        </Cast>\n      ) : (\n        <CastEmpty>We don't have any cast for this movie.</CastEmpty>\n      )}\n    </>\n  );\n};\n\nexport default MovieCast;\n"],"names":["API_KEY","getMovies","endpoint","axios","response","data","getTrendingMovies","getSearchMovies","query","getSingleMovie","movieId","getMovieCredits","getMovieReviews","ProfileImg","styled","Cast","Item","Name","Character","CastEmpty","useState","cast","setCast","id","useParams","useEffect","getCast","console","log","length","map","name","character","profile_path","src","profile","alt"],"sourceRoot":""}