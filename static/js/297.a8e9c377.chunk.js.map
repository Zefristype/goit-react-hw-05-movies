{"version":3,"file":"static/js/297.a8e9c377.chunk.js","mappings":"oNAGaA,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,+K,SCCTE,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GACV,OACE,yBACE,SAACR,EAAD,CAAWS,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAArD,SACGG,EAAMK,SAFFL,EAAME,GAMlB,KAGN,C,mMCjBKI,EAAU,mCAIT,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,yHAA2C,GAA3C,SACkBC,EAAAA,EAAAA,IAAUD,GAD5B,cACCE,EADD,yBAEEA,EAASC,MAFX,mEAKA,SAASC,IACd,OAAOL,EAAU,+BAAD,OAAgCD,GACjD,CAEM,SAASO,EAAgBC,GAC9B,OAAOP,EAAU,yBAAD,OAA0BD,EAA1B,kBAA2CQ,GAC5D,CAEM,SAASC,EAAeC,GAC7B,OAAOT,EAAU,UAAD,OAAWS,EAAX,oBAA8BV,EAA9B,mBACjB,CAEM,SAASW,EAAgBD,GAC9B,OAAOT,EAAU,UAAD,OACJS,EADI,4BACuBV,EADvB,mBAGjB,CAEM,SAASY,EAAgBF,GAC9B,OAAOT,EAAU,UAAD,OACJS,EADI,4BACuBV,EADvB,mBAGjB,CA7BDG,EAAAA,EAAAA,SAAAA,QAAyB,+B,8JCFZU,EAAQ1B,EAAAA,GAAAA,MAAH,gIAOL2B,EAAQ3B,EAAAA,GAAAA,MAAH,iEAKL4B,EAAO5B,EAAAA,GAAAA,KAAH,6DAKJ6B,EAAS7B,EAAAA,GAAAA,OAAH,0U,SCdN8B,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOX,EAAP,KAAcY,EAAd,KASA,OACE,UAACL,EAAD,CAAMG,SATa,SAAAG,GACnBA,EAAEC,iBACFJ,EAASV,EAAMe,QACfH,EAAS,GACV,EAKC,WACE,UAACP,EAAD,6BAEE,SAACC,EAAD,CACEU,SARa,SAAAH,GACnBD,EAASC,EAAEI,cAAcC,MAC1B,EAOOC,YAAa,gBACbD,MAAOlB,EACPoB,KAAK,QACLC,KAAK,aAGT,SAACb,EAAD,CAAQa,KAAK,SAAb,UACE,SAAC,MAAD,CAAiBC,KAAM,SAI9B,E,8BCKD,EA/Be,WAAO,IAAD,EACnB,GAA4BX,EAAAA,EAAAA,UAAS,MAArC,eAAO7B,EAAP,KAAeyC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACM1B,EAAQyB,EAAaE,IAAb,UAAiB,SAAjB,EAA4B,KAE1CC,EAAAA,EAAAA,YAAU,WACR,GAAc,OAAV5B,EAAJ,CAGA,IAAMP,EAAS,mCAAG,8GAEKM,EAAAA,EAAAA,IAAgBC,GAFrB,OAERH,EAFQ,OAGd0B,EAAU1B,EAAKgC,SAHD,gDAKdC,QAAQC,IAAR,MALc,yDAAH,qDAQftC,GATC,CAUF,GAAE,CAACO,IAKJ,OACE,iCACE,SAACS,EAAD,CAAWC,SANM,SAAAsB,GACnBN,EAAgC,KAAhBM,EAAqB,CAAC,EAAI,CAAEhC,MAAOgC,GACpD,IAKe,OAAXlD,IAAmB,SAAC,IAAD,CAAWA,OAAQA,MAG5C,C","sources":["components/MoviesList/MovieList.styled.jsx","components/MoviesList/MoviesList.jsx","components/services/getMovies.js","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieLink = styled(Link)`\n  font-size: 24px;\n  color: black;\n  text-decoration: none;\n  transition: color 200ms ease-out;\n  &:hover,\n  &:focus {\n    color: #ff7b00;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { MovieLink } from './MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(movie => {\n        return (\n          <li key={movie.id}>\n            <MovieLink to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </MovieLink>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import axios from 'axios';\n\nconst API_KEY = '2a9c1d08031f8c725807d91372c6f53b';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function getMovies(endpoint, query = '') {\n  const response = await axios.get(endpoint);\n  return response.data;\n}\n\nexport function getTrendingMovies() {\n  return getMovies(`/trending/movie/day?api_key=${API_KEY}`);\n}\n\nexport function getSearchMovies(query) {\n  return getMovies(`/search/movie?api_key=${API_KEY}&query=${query}`);\n}\n\nexport function getSingleMovie(movieId) {\n  return getMovies(`/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n}\n\nexport function getMovieCredits(movieId) {\n  return getMovies(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function getMovieReviews(movieId) {\n  return getMovies(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n}\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  gap: 20px;\n  align-items: center;\n  justify-content: center;\n  font-size: 26px;\n`;\nexport const Input = styled.input`\n  font-size: 24px;\n  font-weight: 400;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  margin: 22px 0;\n`;\n\nexport const Button = styled.button`\n  display: block;\n  cursor: pointer;\n  background-color: #fff;\n  border: none;\n  border-radius: 2px;\n\n  background-color: #ff7b00;\n  transition: all 250ms ease-out;\n  svg {\n    fill: #fff;\n  }\n  &:hover,\n  &:focus {\n    background-color: #3a3a3a;\n    svg {\n      fill: #ff7b00;\n    }\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport { Label, Input, Form, Button } from './Searchbar.styled';\n\nexport const Searchbar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(query.trim());\n    setQuery('');\n  };\n  const handleChange = e => {\n    setQuery(e.currentTarget.value);\n  };\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Search movies:\n        <Input\n          onChange={handleChange}\n          placeholder={'Enter a movie'}\n          value={query}\n          name=\"query\"\n          type=\"text\"\n        />\n      </Label>\n      <Button type=\"submit\">\n        <AiOutlineSearch size={28} />\n      </Button>\n    </Form>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { Searchbar } from 'components/Searchbar/Searchbar';\nimport { useState, useEffect } from 'react';\nimport { getSearchMovies } from 'components/services/getMovies';\nimport { MovieList } from 'components/MoviesList/MoviesList';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query' ?? '');\n\n  useEffect(() => {\n    if (query === null) {\n      return;\n    }\n    const getMovies = async () => {\n      try {\n        const data = await getSearchMovies(query);\n        setMovies(data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getMovies();\n  }, [query]);\n  const handleSubmit = searchQuery => {\n    setSearchParams(searchQuery === '' ? {} : { query: searchQuery });\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={handleSubmit} />\n      {movies !== null && <MovieList movies={movies} />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["MovieLink","styled","Link","MovieList","movies","location","useLocation","map","movie","to","id","state","from","title","API_KEY","getMovies","endpoint","axios","response","data","getTrendingMovies","getSearchMovies","query","getSingleMovie","movieId","getMovieCredits","getMovieReviews","Label","Input","Form","Button","Searchbar","onSubmit","useState","setQuery","e","preventDefault","trim","onChange","currentTarget","value","placeholder","name","type","size","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","results","console","log","searchQuery"],"sourceRoot":""}